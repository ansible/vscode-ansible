---
# see https://github.com/ansible-community/devtools
_extends: ansible-community/devtools
# We append `-next.0` to our drafted tags because we do not want to make a
# full release when we press "publish" on github releases.
#
# npm version prerelease --preid=next
#
# In our release pipeline we will create a pull-request that updates
# CHANGELOG.md and the version number.
#
# When this pull request is merged, we will:
# * publish to npm
# * create the correct tag (already present in package.json)
# * edit the release to point it the new tag instead of the -next.0 one
tag-template: 'v$RESOLVED_VERSION-next.0'
# instead of 2x# we use 3x to make the outcome ready to embed into CHANGELOG.md
category-template: '### $TITLE'
template: '$CHANGES'
# Due to vscode pre-release versioning limitations we cannot use the PATCH part
# of the MAJOR.MINOR.PATCH, so both bugfixes and minor changes will affect
# the MINOR number. Regardless this, we will still list enhancement and bugs
# in different sections in changelog, only the versioning logic being affected.
# https://code.visualstudio.com/api/working-with-extensions/publishing-extension
version-resolver:
  major:
    labels:
      - "major"
  minor:
    labels:
      - "bug"
      - "deprecated"
      - "enhancement"
      - "feature"
      - "minor"
      - "patch"
      - "refactoring"
  default: minor
