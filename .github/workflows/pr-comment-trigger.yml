# cspell:ignore oidc
name: PR Comment Trigger Tests

# Trigger on issue comments in pull requests
on:
  issue_comment:
    types: [created]

# Only run on pull request comments
concurrency:
  group: pr-comment-trigger-${{ github.event.issue.number }}-${{ github.event.comment.id }}
  cancel-in-progress: true

jobs:
  # Check if the comment is a test trigger command
  check-comment:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request && github.event.action == 'created'
    outputs:
      should-trigger: ${{ steps.check.outputs.should-trigger }}
      test-type: ${{ steps.check.outputs.test-type }}
      pr-number: ${{ github.event.issue.number }}
      pr-head-sha: ${{ steps.get-pr.outputs.head-sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Get PR details
        id: get-pr
        run: |
          PR_DATA=$(gh pr view ${{ github.event.issue.number }} --json headRefOid)
          echo "head-sha=$(echo $PR_DATA | jq -r '.headRefOid')" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check comment content
        id: check
        run: |
          COMMENT_BODY="${{ github.event.comment.body }}"
          echo "Comment body: $COMMENT_BODY"
          
          # Check for test trigger commands
          if echo "$COMMENT_BODY" | grep -qiE "^\s*(/test|/run-tests|/retest)\s*$"; then
            echo "should-trigger=true" >> $GITHUB_OUTPUT
            echo "test-type=all" >> $GITHUB_OUTPUT
            echo "‚úÖ Triggering all tests"
          elif echo "$COMMENT_BODY" | grep -qiE "^\s*(/test-unit|/run-unit-tests)\s*$"; then
            echo "should-trigger=true" >> $GITHUB_OUTPUT
            echo "test-type=unit" >> $GITHUB_OUTPUT
            echo "‚úÖ Triggering unit tests"
          elif echo "$COMMENT_BODY" | grep -qiE "^\s*(/test-ui|/run-ui-tests)\s*$"; then
            echo "should-trigger=true" >> $GITHUB_OUTPUT
            echo "test-type=ui" >> $GITHUB_OUTPUT
            echo "‚úÖ Triggering UI tests"
          elif echo "$COMMENT_BODY" | grep -qiE "^\s*(/test-e2e|/run-e2e-tests)\s*$"; then
            echo "should-trigger=true" >> $GITHUB_OUTPUT
            echo "test-type=e2e" >> $GITHUB_OUTPUT
            echo "‚úÖ Triggering E2E tests"
          elif echo "$COMMENT_BODY" | grep -qiE "^\s*(/test-als|/run-als-tests)\s*$"; then
            echo "should-trigger=true" >> $GITHUB_OUTPUT
            echo "test-type=als" >> $GITHUB_OUTPUT
            echo "‚úÖ Triggering ALS tests"
          else
            echo "should-trigger=false" >> $GITHUB_OUTPUT
            echo "test-type=none" >> $GITHUB_OUTPUT
            echo "‚ùå No valid test command found"
          fi

  # Trigger the actual test run
  trigger-tests:
    needs: check-comment
    if: needs.check-comment.outputs.should-trigger == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Add comment to PR
        run: |
          gh pr comment ${{ needs.check-comment.outputs.pr-number }} \
            --body "üöÄ **Test Triggered by @${{ github.event.comment.user.login }}**
          
          **Test Type:** ${{ needs.check-comment.outputs.test-type }}
          **Triggered by:** \`${{ github.event.comment.body }}\`
          
          Tests are now running... ‚è≥"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger workflow dispatch
        run: |
          gh workflow run ci.yaml \
            --ref ${{ needs.check-comment.outputs.pr-head-sha }} \
            --field test_type="${{ needs.check-comment.outputs.test-type }}" \
            --field triggered_by="pr_comment" \
            --field pr_number="${{ needs.check-comment.outputs.pr-number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for workflow to start
        run: |
          echo "Waiting for workflow to start..."
          sleep 10
          
          # Get the latest workflow run
          RUN_ID=$(gh run list --workflow=ci.yaml --limit=1 --json databaseId --jq '.[0].databaseId')
          echo "Workflow run ID: $RUN_ID"
          
          # Add a follow-up comment with the workflow run link
          gh pr comment ${{ needs.check-comment.outputs.pr-number }} \
            --body "üìã **Test Run Started**
          
          **Workflow Run:** [View Details](https://github.com/${{ github.repository }}/actions/runs/$RUN_ID)
          **Test Type:** ${{ needs.check-comment.outputs.test-type }}
          
          You can monitor the progress by clicking the link above."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
