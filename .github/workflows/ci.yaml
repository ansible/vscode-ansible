# This is a basic workflow

name: ci

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FORCE_COLOR: "1"  # make mocha output colorful

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: >-
      ${{
        matrix.name
        && matrix.name
        || format(
          '{0} ({1})',
          matrix.npm-target,
          matrix.os
        )
      }}
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-11
          - windows-latest
        npm-target:
          - test-ui
        upload-artifact:
          - false
        name:
          - false
        include:
          - name: lint
            npm-target: lint
            os: ubuntu-latest
            upload-artifact: true

          - name: devel-ui
            # this job will install latest version of ansible-language-server
            # instead of the one mentioned in package[-lock].json
            npm-target: test-ui
            os: ubuntu-latest
            devel: true

          - name: devel-e2e
            # this job will install latest version of ansible-language-server
            # instead of the one mentioned in package[-lock].json
            npm-target: test-e2e
            os: ubuntu-latest
            devel: true

          - name: test-ui
            npm-target: test-ui
            os: ubuntu-latest
            devel: false

          - name: test-e2e
            npm-target: test-e2e
            os: ubuntu-latest
            devel: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout vscode-ansible
        uses: actions/checkout@v2

      # ~400mb, caching them should speedup test-ui execution
      - name: Enable test-resources caching
        uses: actions/cache@v2
        if: ${{ contains(matrix.npm-target, 'test-ui') }}
        with:
          path: |
            out/test-resources
            out/test-resources-oldest
          key: ${{ runner.os }}-${{ matrix.npm-target }}-${{ hashFiles('package.json', 'package-lock.json') }}

      - name: Use NodeJS v16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Run ./tools/test-setup.sh

        run: |
          ./tools/test-setup.sh
        shell: bash

      - name: Checkout ansible-language-server
        if: ${{ matrix.devel }}
        uses: actions/checkout@v2
        with:
          repository: ansible/ansible-language-server
          path: ansible-language-server
          # We will later move this folder to ../ due to below bug:
          # https://github.com/actions/checkout/issues/197

      - name: Build and package extension with main branch of ansible-language-server repository
        if: ${{ matrix.devel }}
        # do not try to use command below as vsce package is unable to work with symlinked modules:
        # npm install --save ../ansible-language-server
        run: |
          set -ex
          mv ansible-language-server ..
          pushd ../ansible-language-server
          npm ci #  Install ansible-language-server dependencies
          cd ../vscode-ansible
          rm -rf node_modules/@ansible/ansible-language-server
          rm -rf out/server/src/*
          cp -r ../ansible-language-server node_modules/@ansible/ansible-language-server
          npm ls
          npm run webpack
          npm run vsce
        shell: bash

      - name: Build and package extension with released ansible-language-server
        if: ${{ matrix.devel == false }}
        run: |
          npm run compile
          npm run package

      - name: Run ${{ matrix.npm-target }}
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm run ${{ matrix.npm-target }}

      - name: Publish vsix artifact
        if: ${{ github.event.number && matrix.upload-artifact }}
        uses: actions/upload-artifact@v2
        with:
          name: ansible-extension-from-pr-${{ github.event.number }}.vsix
          path: ansible-*.vsix
          retention-days: 15

      - name: Publish test logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.os }}-${{ matrix.npm-target }}.zip
          path: |
            out/e2eTestReport
            out/userdata/logs
            out/test-resources/settings/logs
          if-no-files-found: ignore
          retention-days: 15

      - name: debug EE plugin cache files
        if: ${{ always() }}
        continue-on-error: true
        run: |
          podman images
          podman image inspect quay.io/ansible/network-ee:stable-2.12
          ls -al ~/.cache/
          tree ~/.cache/
        shell: bash

      ## commented out for future use to debug on the GHA node if required
      # - name: Setup tmate session
      #   if: ${{ always() }}
      #   uses: mxschmitt/action-tmate@v3

      # extra safety measure that ensures code was not modified during build
      - name: Ensure git does not report dirty
        # on devel we install ansible-language-server from source, which alters package.json
        if: ${{ !matrix.devel }}
        run: git diff --exit-code

  check: # This job does nothing and is only used for the branch protection
    if: always()

    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
