# This is a basic workflow

name: ci

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: >-
      ${{
        matrix.name
        && matrix.name
        || format(
          '{0} ({1})',
          matrix.npm-target,
          matrix.os
        )
      }}
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-11
        - windows-latest
        npm-target:
        - test:ui
        - test:ui-oldest
        upload-artifact:
        - false
        name:
        - false
        include:
        - name: lint
          npm-target: lint
          os: ubuntu-latest
          upload-artifact: true
        - name: devel
          # this job will install latest version of ansible-language-server
          # instead of the one mentioned in package[-lock].json
          npm-target: test:ui
          os: ubuntu-latest
          devel: true
        - name: test:e2e
          npm-target: test:e2e
          os: ubuntu-latest
          experimental: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Clone development branch of ansible-language-server
        if: ${{ matrix.devel }}
        uses: actions/checkout@v2
        with:
          repository: ansible/ansible-language-server
          path: ansible-language-server
          # We will later move this folder to ../ due to below bug:
          # https://github.com/actions/checkout/issues/197

      # ~400mb, caching them should speedup test:ui execution
      - name: Enable test-resources caching
        uses: actions/cache@v2
        if: ${{ contains(matrix.npm-target, 'test:ui') }}
        with:
          path: |
            out/test-resources
            out/test-resources-oldest
          key: ${{ runner.os }}-${{ matrix.npm-target }}-${{ hashFiles('package.json', 'package-lock.json') }}

      - name: Use NodeJS v16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      # Run install dependencies
      - name: Install dependencies
        run: |
          set -ex
          # we don't want the outdated ubuntu blend of ansible
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get remove -y ansible
          fi
          pipx install pre-commit
          # see https://github.com/pypa/pipx/issues/88
          pipx install ansible-lint
          if [ "$RUNNER_OS" != "Windows" ]; then
            pipx inject --include-apps ansible-lint yamllint ansible-core
            ansible-lint --version
            ansible --version
          fi
          npm config set fund false
          npm ci
        shell: bash

      - name: Link development version of ansible-language-server
        if: ${{ matrix.devel }}
        run: |
          set -ex
          mv ansible-language-server ..
          npm link --save ../ansible-language-server
          pushd ../ansible-language-server
          npm ci
          npm run compile
          popd
          npm ls --depth=0 --link=true
        shell: bash

      # Build extension
      - name: Run build
        run: npm run compile

      - name: Run ${{ matrix.npm-target }}
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm run ${{ matrix.npm-target }}

      - name: Run package
        run: npm run package

      - name: Publish vsix artifact
        if: ${{ github.event.number && matrix.upload-artifact }}
        uses: actions/upload-artifact@v2
        with:
          name: ansible-extension-from-pr-${{ github.event.number }}.vsix
          path: ansible-*.vsix
          retention-days: 15

      # extra safety measure that ensures code was not modified during build
      - name: Ensure git does not report dirty
        # on devel we use `npm link --save ..` which will alter tracked files
        if: ${{ !matrix.devel }}
        run: git diff --exit-code

  check:  # This job does nothing and is only used for the branch protection
    if: always()

    needs:
    - build

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
