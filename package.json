{
  "activationEvents": [
    "onLanguage:yaml",
    "workspaceContains:tox-ansible.ini",
    "onWebviewPanel:ansible-home"
  ],
  "badges": [
    {
      "description": "last-commit",
      "href": "https://github.com/ansible/vscode-ansible",
      "url": "https://img.shields.io/github/last-commit/ansible/vscode-ansible/main"
    },
    {
      "description": "downloads",
      "href": "https://github.com/ansible/vscode-ansible",
      "url": "https://img.shields.io/visual-studio-marketplace/d/redhat.ansible"
    }
  ],
  "bugs": "https://github.com/ansible/vscode-ansible/issues",
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "config": {
    "//": "Oldest version known to work. Be careful updating as it is mentioned in multiple places.",
    "min_vscode": "1.63.0"
  },
  "contributors": [
    {
      "name": "Tomasz Maciążek",
      "email": "tomaciazek@gmail.com"
    },
    {
      "email": "ssbarnea@redhat.com",
      "name": "Sorin Sbarnea"
    },
    {
      "email": "info@ansible.com",
      "name": "Ansible DevTools Team and Community Contributors",
      "url": "https://github.com/ansible/vscode-ansible/graphs/contributors"
    }
  ],
  "contributes": {
    "walkthroughs": [
      {
        "id": "create-ansible-environment",
        "title": "Create an Ansible environment",
        "description": "To access Ansible development tools, create an Ansible environment.",
        "steps": [
          {
            "id": "create-ansible-playbook",
            "title": "Create an Ansible playbook",
            "description": "This will activate Ansible development tools. Make sure the file is saved as \".yml\" or \".yaml\" .\n[Create Ansible Playbook](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22ansible%22%7D)",
            "media": {
              "image": "media/walkthroughs/createAnsibleEnv/open-folder.png",
              "altText": "No image found"
            }
          },
          {
            "id": "check-ansible-tag",
            "title": "Make sure you see the \"Ansible\" tag in the status bar",
            "description": "If your Ansible playbook was successfully created, you should see an Ansible tag in the status bar. If not, you can [change the language](command:ansible.walkthrough.gettingStarted.setLanguage).\nHovering over the Ansible tag can tell you about installed versions or environment issues. If tools are missing or warnings are present, continue to the next step to fix the environment.",
            "media": {
              "markdown": "media/walkthroughs/createAnsibleEnv/selectAnsibleLanguage.md"
            }
          },
          {
            "id": "install-ansible-development-package",
            "title": "Install the Ansible development package",
            "description": "The Ansible development package contains all of the dependencies your environment needs to work with Ansible development tools. \n[Install Ansible development package](command:ansible.install-ansible-dev-tools)\nAlternatively, [switch to another environment](command:ansible.python.set.interpreter) that has those installed.",
            "media": {
              "markdown": "media/walkthroughs/createAnsibleEnv/adt-components.md"
            }
          }
        ]
      },
      {
        "id": "start-automating-playbook",
        "title": "Start automating with your first Ansible playbook",
        "description": "Create your first automation playbook while learning best practices.",
        "steps": [
          {
            "id": "enable-lightspeed-playbook",
            "title": "Enable Ansible Lightspeed",
            "description": "Use generative AI to assist in your automation content creation.\nAnsible Lightspeed is available to Ansible Automation Platform users.\nCheck availability by logging in with your Red Hat account.\n[Log in with Red Hat ↗](command:ansible.lightspeed.signInWithLightspeed)\n[Learn more ↗](https://www.redhat.com/en/technologies/management/ansible/ansible-lightspeed) ",
            "media": {
              "markdown": "media/walkthroughs/startAutomatingPlaybook/enable-lightspeed.md"
            }
          },
          {
            "id": "create-project-playbook",
            "title": "Create an Ansible playbook project",
            "description": "Create a pre-configured Ansible playbook project repository.\n[Create an Ansible playbook project](command:ansible.content-creator.create-ansible-project)",
            "media": {
              "markdown": "media/walkthroughs/startAutomatingPlaybook/playbook-project.md"
            }
          },
          {
            "id": "create-ansible-playbook",
            "title": "Create an Ansible playbook",
            "description": "Ansible Playbooks are lists of tasks that automatically execute for your specified inventory or groups of hosts.\nWithin your playbook project, create a new Ansible Playbook.\nIf Ansible Lightspeed is enabled in settings, a generation template will appear. Otherwise, this creates an empty playbook for you to modify.\n[Create Ansible playbook](command:ansible.create-playbook-options)",
            "media": {
              "image": "media/walkthroughs/startAutomatingPlaybook/create-playbook.png",
              "altText": "No image found"
            }
          },
          {
            "id": "save-ansible-playbook",
            "title": "Save your playbook to a playbook project",
            "description": "Save your playbook in your new playbook project.\nWe recommend saving your playbooks under the **playbooks/** folder inside your project.",
            "media": {
              "markdown": "media/walkthroughs/startAutomatingPlaybook/playbook-project.md"
            }
          },
          {
            "id": "learn-more-playbook",
            "title": "Learn more about playbooks",
            "description": "If you want to become a master, start digging into our Ansible playbook learning resources.\n[Check out learning resources ↗](https://www.redhat.com/en/topics/automation/what-is-an-ansible-playbook)",
            "media": {
              "image": "media/walkthroughs/startAutomatingPlaybook/learning.png",
              "altText": "No image found"
            }
          }
        ]
      },
      {
        "id": "discover-ansible-development-tools",
        "title": "Discover Ansible Development Tools",
        "description": "A quick review of the tools that will help you create, test, and deploy your automation code.",
        "steps": [
          {
            "id": "adt-create",
            "title": "Create",
            "description": "**Scaffold automation content with Ansible creator**\nThe fastest way to generate all your Ansible content! Whether you are initializing an Ansible collection or creating the framework for specific plugins, this tool streamlines the process with efficiency and precision based on your requirements.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/creator/) \n-----\n**Manage automation content with Ansible navigator**\nA text-based user interface (TUI) for creating, reviewing, running and troubleshooting Ansible content, including inventories, playbooks, collections, documentation, and execution environments.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/navigator/) \n-----\n**Discover content with Ansible automation hub**\nYour organization's on-premise repository with curated, certified and validated Ansible content.\n[View Documentation ↗](https://docs.redhat.com/en/documentation/red_hat_ansible_automation_platform/2.5/html/managing_automation_content/index) \n-----\n**Build with Ansible Lightspeed**\nAnsible's generative AI service that provides Ansible code based on natural language prompts. Include content explanation and more to help you build with confidence.\n[View Documentation ↗](https://www.redhat.com/en/technologies/management/ansible/ansible-lightspeed) \n[Ansible Lightspeed Trial Walkthrough ↗](https://www.redhat.com/en/products/interactive-walkthrough/install-ansible-lightspeed) ",
            "media": {
              "markdown": "media/walkthroughs/discoverAdt/adt-create.md"
            }
          },
          {
            "id": "adt-test",
            "title": "Test",
            "description": "**Test playbooks with Ansible lint**\nChecks playbooks for style errors, best practices, and other issues to ensure the integrity of your code.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/lint/) \n-----\n**Test collections with Ansible Molecule**\nAssists in the development and testing of Ansible collections, playbooks, and roles.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/molecule/) \n-----\n**Test collections with tox Ansible**\nAn extension to the tox testing utility that provides additional functionality to check Ansible module and plugin Python code under different Python interpreters and Ansible core versions.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/tox-ansible/) \n-----\n**Integrate with pytest using pytest Ansible**\nA pytest testing framework extension that provides additional functionality for testing Ansible module and plugin Python code.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/pytest-ansible/) ",
            "media": {
              "markdown": "media/walkthroughs/discoverAdt/adt-test.md"
            }
          },
          {
            "id": "adt-deploy",
            "title": "Deploy",
            "description": "**Build execution environments with Ansible builder**\nAutomates the process of creating execution environments using schemas and tooling.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/builder/) \n-----\n**Verify Ansible content with Ansible sign**\nUtility for signing and verifying Ansible project directory contents to ensure a secure software supply chain.\n[View Documentation ↗](https://ansible.readthedocs.io/projects/sign/) ",
            "media": {
              "markdown": "media/walkthroughs/discoverAdt/adt-deploy.md"
            }
          },
          {
            "id": "adt-where-to-start",
            "title": "Where do I start?",
            "description": "**Install the Ansible development package, if you have not already**\nThe Ansible development package contains all of the dependencies your environment needs to work with Ansible development tools.\n[Install Ansible development package](command:ansible.install-ansible-dev-tools)\nAlternatively, [switch to another environment](command:ansible.python.set.interpreter) that has those installed.\n-----\n**Check out other walkthroughs**\n[• Create an Ansible Environment](command:ansible.open-walkthrough-create-env) ",
            "media": {
              "markdown": "media/walkthroughs/discoverAdt/adt-components.md"
            }
          }
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ansible-explorer",
          "title": "Ansible",
          "icon": "images/ansible.svg"
        }
      ],
      "panel": [
        {
          "id": "lightspeed-training-match-panel",
          "title": "Ansible",
          "icon": "images/ansible.svg"
        }
      ]
    },
    "views": {
      "ansible-explorer": [
        {
          "id": "ansible-home",
          "name": "Ansible Development Tools",
          "type": "webview"
        },
        {
          "id": "lightspeed-explorer-webview",
          "name": "Ansible Lightspeed",
          "type": "webview"
        },
        {
          "id": "lightspeed-feedback-webview",
          "name": "Ansible Lightspeed Feedback",
          "type": "webview"
        }
      ],
      "lightspeed-training-match-panel": [
        {
          "id": "ansible.lightspeed.trainingMatchPanel",
          "name": "Lightspeed Training Matches",
          "type": "webview",
          "contextualTitle": "Ansible",
          "when": "redhat.ansible.lightspeedSuggestionsEnabled",
          "visibility": "visible",
          "retainContextWhenHidden": true
        }
      ]
    },
    "jsonValidation": [
      {
        "fileMatch": [
          ".ansible-navigator.json",
          "ansible-navigator.json"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-navigator/main/src/ansible_navigator/data/ansible-navigator.json"
      }
    ],
    "yamlValidation": [
      {
        "fileMatch": [
          "execution-environment.yml"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/execution-environment.json"
      },
      {
        "fileMatch": [
          "meta/runtime.yml"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/meta-runtime.json"
      },
      {
        "fileMatch": [
          ".ansible-navigator.yaml",
          ".ansible-navigator.yml",
          "ansible-navigator.yaml",
          "ansible-navigator.yml"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-navigator/main/src/ansible_navigator/data/ansible-navigator.json"
      },
      {
        "fileMatch": "requirements.yml",
        "url": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/requirements.json"
      },
      {
        "fileMatch": "meta/main.yml",
        "url": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/meta.json"
      },
      {
        "fileMatch": [
          "playbooks/vars/*.yml",
          "playbooks/vars/*.yaml",
          "vars/*.yml",
          "vars/*.yaml",
          "defaults/*.yml",
          "defaults/*.yaml",
          "host_vars/*.yml",
          "host_vars/*.yaml",
          "group_vars/*.yml",
          "group_vars/*.yaml"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/vars.json"
      },
      {
        "fileMatch": [
          ".ansible-lint",
          ".config/ansible-lint.yml"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible-lint-config.json"
      },
      {
        "fileMatch": [
          "molecule/*/molecule.yml"
        ],
        "url": "https://raw.githubusercontent.com/ansible-community/molecule/main/src/molecule/data/molecule.json"
      },
      {
        "fileMatch": [
          "galaxy.yml"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/galaxy.json"
      },
      {
        "fileMatch": [
          "rulebooks/*.yaml",
          "rulebooks/*.yml"
        ],
        "url": "https://raw.githubusercontent.com/ansible/ansible-rulebook/main/schema/ruleset_schema.json"
      }
    ],
    "commands": [
      {
        "command": "extension.resync-ansible-inventory",
        "title": "Resync Ansible Inventory"
      },
      {
        "category": "%commands.category.ansible-playbook%",
        "command": "extension.ansible-playbook.run",
        "title": "%commands.title.ansible-playbook%"
      },
      {
        "category": "%commands.category.ansible-playbook%",
        "command": "extension.ansible-navigator.run",
        "title": "%commands.title.ansible-navigator%"
      },
      {
        "category": "%commands.category.ansible-vault%",
        "command": "extension.ansible.vault",
        "title": "%commands.title.ansible-vault%"
      },
      {
        "command": "ansible.python.set.interpreter",
        "title": "Ansible: Set Python Interpreter"
      },
      {
        "command": "ansible.extension-settings.open",
        "title": "Ansible: Open Ansible Extension Settings"
      },
      {
        "command": "ansible.python-settings.open",
        "title": "Ansible: Open Python Settings"
      },
      {
        "command": "ansible.create-empty-playbook",
        "title": "Ansible: Create an empty Ansible playbook"
      },
      {
        "command": "ansible.create-playbook-options",
        "title": "Ansible: Create an empty playbook or with Lightspeed (if enabled)"
      },
      {
        "command": "ansible.content-creator.menu",
        "title": "Open Ansible Development Tools menu"
      },
      {
        "command": "ansible.content-creator.install",
        "title": "Install Ansible Content Creator"
      },
      {
        "command": "ansible.content-creator.create-ansible-collection",
        "title": "Ansible: Create New Collection"
      },
      {
        "command": "ansible.content-creator.create-ansible-project",
        "title": "Ansible: Create New Playbook Project"
      },
      {
        "command": "ansible.content-creator.create-devfile",
        "title": "Ansible: Create a Devfile"
      },
      {
        "command": "ansible.content-creator.create-sample-execution-env-file",
        "title": "Ansible: Create a Sample Execution Environment file"
      },
      {
        "command": "ansible.content-creator.create-devcontainer",
        "title": "Ansible: Create a Devcontainer"
      },
      {
        "command": "ansible.content-creator.add-plugin",
        "title": "Ansible: Add a Plugin"
      },
      {
        "command": "ansible.content-creator.create",
        "title": "Ansible Content Creator: Create"
      },
      {
        "command": "ansible.content-creator.sample",
        "title": "Ansible Content Creator: Sample"
      },
      {
        "command": "ansible.lightspeed.inlineSuggest.accept",
        "title": "Ansible Lightspeed: Inline suggestion accept"
      },
      {
        "command": "ansible.lightspeed.inlineSuggest.hide",
        "title": "Ansible Lightspeed: Inline suggestion hide"
      },
      {
        "command": "ansible.lightspeed.inlineSuggest.trigger",
        "title": "Ansible Lightspeed: Inline suggestion trigger"
      },
      {
        "command": "ansible.lightspeed.fetchTrainingMatches",
        "title": "Ansible Lightspeed: Fetch Training Matches"
      },
      {
        "command": "ansible.lightspeed.clearTrainingMatches",
        "title": "Ansible Lightspeed: Clear Training Matches"
      },
      {
        "command": "ansible.lightspeed.feedback",
        "title": "Ansible Lightspeed: Feedback"
      },
      {
        "command": "ansible.lightspeed.signInWithRedHat",
        "title": "Ansible Lightspeed: Sign in with Red Hat"
      },
      {
        "command": "ansible.lightspeed.signInWithLightspeed",
        "title": "Ansible Lightspeed: Sign in with Lightspeed"
      },
      {
        "command": "ansible.lightspeed.playbookGeneration",
        "title": "Ansible Lightspeed: Playbook generation"
      },
      {
        "command": "ansible.lightspeed.roleGeneration",
        "enablement": "redhat.ansible.lightspeedExperimentalEnabled",
        "title": "Ansible Lightspeed: Role generation"
      },
      {
        "command": "ansible.lightspeed.thumbsUpDown",
        "title": "Send Lightspeed Thumbs Up/Down Feedback"
      },
      {
        "command": "ansible.lightspeed.playbookExplanation",
        "title": "Explain the playbook with Ansible Lightspeed"
      },
      {
        "command": "ansible.lightspeed.openTrialPage",
        "title": "Ansible Lightspeed: Open trial page",
        "enablement": "redhat.ansible.lightspeedExperimentalEnabled"
      },
      {
        "command": "ansible.lightspeed.explorer.refresh",
        "title": "Ansible Lightspeed: Refresh explorer view",
        "icon": "$(refresh)"
      },
      {
        "command": "ansible.lightspeed.enableExperimentalFeatures",
        "title": "Ansible Lightspeed: Enable experimental features"
      },
      {
        "command": "ansible.walkthrough.gettingStarted.setLanguage",
        "title": "Ansible: Getting started - Set Language"
      },
      {
        "command": "ansible.install-ansible-dev-tools",
        "title": "Ansible: Install Ansible Development Tools"
      },
      {
        "command": "ansible.open-language-server-logs",
        "title": "Ansible: Open Language Server Logs"
      }
    ],
    "configuration": [
      {
        "title": "Basic Configurations",
        "properties": {
          "ansible.ansible.path": {
            "scope": "machine-overridable",
            "type": "string",
            "default": "ansible",
            "markdownDescription": "Path to the ansible executable. All subcommands are expected to have adjacent locations.",
            "order": 0
          },
          "ansible.ansible.useFullyQualifiedCollectionNames": {
            "scope": "resource",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Always use fully qualified collection names (FQCN) when inserting a module name. Disabling it will only use FQCNs when necessary.",
            "order": 1
          },
          "ansible.ansible.reuseTerminal": {
            "scope": "machine-overridable",
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enabling this will cause ansible commands run through VS Code to reuse the same Ansible Terminal.",
            "order": 2
          }
        }
      },
      {
        "title": "Python",
        "properties": {
          "ansible.python.interpreterPath": {
            "scope": "machine-overridable",
            "type": "string",
            "default": "",
            "markdownDescription": "Path to the Python interpreter executable. Particularly important if you are using a Python virtual environment. Leave blank to use Python from PATH.",
            "order": 0
          },
          "ansible.python.activationScript": {
            "scope": "machine-overridable",
            "type": "string",
            "default": "",
            "markdownDescription": "Path to the virtual environment activation script. Use only if you have a custom activation script. It will be sourced using bash before executing Ansible commands. When set, the Interpreter Path setting is ignored.",
            "order": 1
          }
        }
      },
      {
        "title": "Ansible Navigator",
        "properties": {
          "ansible.ansibleNavigator.path": {
            "default": "ansible-navigator",
            "markdownDescription": "%configuration.navigate.executablePath%",
            "order": 0,
            "scope": "machine-overridable",
            "type": "string"
          }
        }
      },
      {
        "title": "Ansible Playbook",
        "properties": {
          "ansible.playbook.arguments": {
            "default": "",
            "markdownDescription": "%configuration.playbook.arguments%",
            "order": 0,
            "scope": "resource",
            "type": "string"
          }
        }
      },
      {
        "title": "Completion",
        "properties": {
          "ansible.completion.provideRedirectModules": {
            "scope": "resource",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Toggle redirected module provider when completing modules.",
            "order": 0
          },
          "ansible.completion.provideModuleOptionAliases": {
            "scope": "resource",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Toggle alias provider when completing module options.",
            "order": 1
          }
        }
      },
      {
        "title": "Validation",
        "properties": {
          "ansible.validation.enabled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "If disabled no validation will be performed.",
            "order": 0
          },
          "ansible.validation.lint.enabled": {
            "scope": "resource",
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enables `ansible-lint`. If disabled only `ansible-playbook --syntax-check` will run. Requires `#ansible.validation.enabled#` to be enabled.",
            "order": 1
          },
          "ansible.validation.lint.path": {
            "scope": "machine-overridable",
            "type": "string",
            "default": "ansible-lint",
            "markdownDescription": "Path to the ansible-lint executable.",
            "order": 2
          },
          "ansible.validation.lint.arguments": {
            "scope": "resource",
            "type": "string",
            "default": "",
            "markdownDescription": "Command line arguments to be passed to ansible-lint.",
            "order": 3
          }
        }
      },
      {
        "title": "Execution Environment",
        "properties": {
          "ansible.executionEnvironment.enabled": {
            "scope": "resource",
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable or disable the use of an execution environment.",
            "order": 0
          },
          "ansible.executionEnvironment.containerEngine": {
            "scope": "resource",
            "type": "string",
            "enum": [
              "auto",
              "podman",
              "docker"
            ],
            "default": "auto",
            "markdownDescription": "Specify the container engine (auto=podman then docker).",
            "order": 1
          },
          "ansible.executionEnvironment.containerOptions": {
            "scope": "resource",
            "type": "string",
            "default": "",
            "markdownDescription": "Extra parameters passed to the container engine command example: `--net=host`.",
            "order": 2
          },
          "ansible.executionEnvironment.image": {
            "scope": "resource",
            "type": "string",
            "default": "ghcr.io/ansible/community-ansible-dev-tools:latest",
            "markdownDescription": "Specify the name of the execution environment image.",
            "order": 3
          },
          "ansible.executionEnvironment.pull.arguments": {
            "scope": "resource",
            "type": "string",
            "default": "",
            "markdownDescription": "Specify any additional parameters that should be added to the pull command when pulling an execution environment from a container registry. e.g. `–-tls-verify=false`.",
            "order": 4
          },
          "ansible.executionEnvironment.pull.policy": {
            "scope": "resource",
            "type": "string",
            "enum": [
              "always",
              "missing",
              "never",
              "tag"
            ],
            "default": "missing",
            "markdownDescription": "Specify the image pull policy.\n**always**: Always pull the image when extension is activated or reloaded\n**missing**: Pull if not locally available\n**never**: Never pull the image\n**tag**: If the image tag is `latest`, always pull the image, otherwise pull if not locally available.",
            "order": 5
          },
          "ansible.executionEnvironment.volumeMounts": {
            "scope": "resource",
            "type": "array",
            "default": [],
            "markdownDescription": "Add a dictionary entry to the array with the volume mount source path (key: 'src'), destination (key: 'dest'), and options (key: 'options')",
            "order": 6
          }
        }
      },
      {
        "title": "Telemetry",
        "properties": {
          "redhat.telemetry.enabled": {
            "type": "boolean",
            "default": null,
            "markdownDescription": "Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).",
            "order": 0,
            "tags": [
              "telemetry",
              "usesOnlineServices"
            ],
            "scope": "window"
          }
        }
      },
      {
        "title": "Ansible Lightspeed",
        "properties": {
          "ansible.lightspeed.enabled": {
            "scope": "resource",
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable Ansible Lightspeed.",
            "order": 0
          },
          "ansible.lightspeed.URL": {
            "scope": "resource",
            "type": "string",
            "default": "https://c.ai.ansible.redhat.com",
            "markdownDescription": "URL for Ansible Lightspeed.",
            "order": 1
          },
          "ansible.lightspeed.suggestions.enabled": {
            "scope": "resource",
            "type": "boolean",
            "default": false,
            "markdownDescription": "Enable Ansible Lightspeed with watsonx Code Assistant inline suggestions.",
            "order": 2
          },
          "ansible.lightspeed.suggestions.waitWindow": {
            "scope": "resource",
            "type": "number",
            "default": 0,
            "markdownDescription": "Delay (in msecs) prior to sending an inline suggestion request to Ansible Lightspeed with watsonx Code Assistant.",
            "order": 3
          },
          "ansible.lightspeed.modelIdOverride": {
            "scope": "resource",
            "type": "string",
            "markdownDescription": "Model ID to override your organization's default model. This setting is only applicable to commercial users with an Ansible Lightspeed seat assignment.",
            "order": 4
          }
        }
      },
      {
        "title": "Language Server",
        "properties": {
          "ansibleServer.trace.server": {
            "type": "string",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "default": "off",
            "markdownDescription": "Traces the communication between editor and the ansible language server.",
            "order": 0
          }
        }
      }
    ],
    "configurationDefaults": {
      "[ansible]": {
        "editor.detectIndentation": true,
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.quickSuggestions": {
          "comments": true,
          "other": true,
          "strings": true
        },
        "editor.autoIndent": "advanced"
      }
    },
    "keybindings": [
      {
        "key": "tab",
        "command": "ansible.lightspeed.inlineSuggest.accept",
        "extensionName": "Ansible",
        "source": "extension",
        "when": "inlineSuggestionVisible && editorLangId == 'ansible'"
      },
      {
        "key": "escape",
        "command": "ansible.lightspeed.inlineSuggest.hide",
        "extensionName": "Ansible",
        "source": "extension",
        "when": "inlineSuggestionVisible && editorLangId == 'ansible'"
      },
      {
        "key": "ctrl+.",
        "command": "ansible.lightspeed.inlineSuggest.trigger",
        "extensionName": "Ansible",
        "source": "extension",
        "when": "config.ansible.lightspeed.enabled && config.ansible.lightspeed.suggestions.enabled && editorTextFocus && !editorHasSelection && !inlineSuggestionVisible && editorLangId == 'ansible'"
      }
    ],
    "languages": [
      {
        "id": "ansible",
        "aliases": [
          "Ansible",
          "ansible"
        ],
        "extensions": [
          ".ansible.yml",
          ".ansible.yaml"
        ],
        "filenamePatterns": [
          "**/playbooks/*.yml",
          "**/playbooks/*.yaml",
          "**/*playbook*.yml",
          "**/*playbook*.yaml",
          "**/roles/**/main.yml",
          "**/roles/**/main.yaml"
        ],
        "filenames": [
          "site.yml",
          "site.yaml"
        ],
        "firstLine": "# code: language=ansible",
        "icon": {
          "dark": "images/ansible-fileicon.svg",
          "light": "images/ansible-fileicon.svg"
        },
        "configuration": "./ansible-language-configuration.json"
      },
      {
        "comments": "unfortunately this dummy entry is necessary for embedding to work",
        "id": "ansible-jinja",
        "configuration": "./jinja-language-configuration.json"
      }
    ],
    "menus": {
      "ansible.playbook.run": [
        {
          "command": "extension.ansible-navigator.run"
        },
        {
          "command": "extension.ansible-playbook.run"
        }
      ],
      "editor/context": [
        {
          "group": "2_main@1",
          "submenu": "ansible.playbook.run",
          "when": "isFileSystemResource && editorLangId == ansible"
        },
        {
          "group": "2_main@1",
          "command": "ansible.lightspeed.playbookExplanation",
          "when": "redhat.ansible.lightspeedSuggestionsEnabled && editorLangId == ansible"
        }
      ],
      "explorer/context": [
        {
          "group": "2_main@1",
          "submenu": "ansible.playbook.run",
          "when": "isFileSystemResource && resourceLangId == ansible"
        }
      ],
      "view/title": [
        {
          "command": "ansible.lightspeed.explorer.refresh",
          "when": "view == lightspeed-explorer-webview",
          "group": "navigation"
        }
      ]
    },
    "submenus": [
      {
        "id": "ansible.playbook.run",
        "label": "%submenus.ansible.run-via%"
      }
    ],
    "grammars": [
      {
        "comments": [
          "YAML syntax as base for Ansible",
          "scopeName changed so that we can use it as base for injections"
        ],
        "language": "ansible",
        "scopeName": "source.ansible",
        "path": "./syntaxes/external/YAML.tmLanguage"
      },
      {
        "comments": [
          "Jinja syntax as injection into Ansible YAML",
          "This is so that we do not need to rely on the Jinja extension being installed"
        ],
        "language": "ansible-jinja",
        "scopeName": "source.ansible-jinja",
        "path": "./syntaxes/external/jinja.tmLanguage.json"
      },
      {
        "comments": [
          "Highlighting of Ansible keywords"
        ],
        "path": "./syntaxes/ansible/generated/keywords.tmLanguage",
        "scopeName": "injection.ansible.keywords",
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "Additional Jinja grammars"
        ],
        "path": "./syntaxes/ansible/generated/jinja-extras.tmLanguage",
        "scopeName": "injection.ansible.jinja-extras",
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "Support for Jinja in double curly braces"
        ],
        "path": "./syntaxes/ansible/generated/jinja-braces.tmLanguage",
        "scopeName": "injection.ansible.jinja-braces",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "ansible-jinja"
        },
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "Support for Jinja in conditionals"
        ],
        "path": "./syntaxes/ansible/generated/jinja-conditionals.tmLanguage",
        "scopeName": "injection.ansible.jinja-conditionals",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "ansible-jinja"
        },
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "The quote escapes implemented in the conditionals injection do not work inside brackets etc.",
          "Support for single quote escapes in Jinja"
        ],
        "path": "./syntaxes/ansible/generated/jinja-single-quote-escape.tmLanguage",
        "scopeName": "injection.ansible.jinja-single-quote-escape",
        "injectTo": [
          "source.ansible"
        ]
      },
      {
        "comments": [
          "The quote escapes implemented in the conditionals injection do not work inside brackets etc.",
          "Support for double quote escapes in Jinja"
        ],
        "path": "./syntaxes/ansible/generated/jinja-double-quote-escape.tmLanguage",
        "scopeName": "injection.ansible.jinja-double-quote-escape",
        "injectTo": [
          "source.ansible"
        ]
      }
    ],
    "taskDefinitions": [
      {
        "type": "Ansible Tox",
        "properties": {
          "ansible": {
            "type": "string",
            "description": "The testenv to execute"
          }
        }
      }
    ]
  },
  "dependencies": {
    "@ansible/ansible-language-server": "workspace:^",
    "@redhat-developer/vscode-redhat-telemetry": "^0.9.1",
    "@shikijs/core": "^1.26.2",
    "@types/ini": "^4.1.1",
    "@vscode-elements/elements": "^1.9.1",
    "@vscode/webview-ui-toolkit": "^1.4.0",
    "axios": "^1.7.9",
    "ini": "^5.0.0",
    "marked": "^15.0.6",
    "minimatch": "^10.0.1",
    "semver": "^7.6.3",
    "uuid": "^11.0.5",
    "vscode-languageclient": "^9.0.1",
    "vscode-uri": "^3.0.8",
    "yaml": "^2.7.0"
  },
  "description": "Ansible language support",
  "devDependencies": {
    "@eslint/js": "^9.18.0",
    "@types/chai": "^4.3.20",
    "@types/express": "^5.0.0",
    "@types/glob": "^8.1.0",
    "@types/jsdom": "^21.1.7",
    "@types/lodash": "^4.17.14",
    "@types/minimatch": "^5.1.2",
    "@types/mocha": "^10.0.10",
    "@types/morgan": "^1.9.9",
    "@types/node": "^22.10.5",
    "@types/selenium-webdriver": "^4.1.28",
    "@types/sinon": "^17.0.3",
    "@types/tmp": "^0.2.6",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.85.0",
    "@types/vscode-webview": "^1.57.5",
    "@types/yargs": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^8.19.1",
    "@typescript-eslint/parser": "^8.19.1",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.1",
    "axios": "^1.7.9",
    "chai": "^4.5.0",
    "depcheck": "^1.4.7",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-formatter-gha": "^1.5.2",
    "eslint-formatter-unix": "^8.40.0",
    "eslint-plugin-chai-friendly": "^1.0.1",
    "eslint-plugin-prettier": "^5.2.1",
    "eslint-plugin-tsdoc": "^0.4.0",
    "express": "^5.0.1",
    "find-process": "^1.4.10",
    "glob": "^11.0.1",
    "globals": "^15.14.0",
    "jsdom": "^26.0.0",
    "lodash": "^4.17.21",
    "mocha": "^11.0.1",
    "mochawesome": "^7.1.3",
    "mochawesome-report-generator": "^6.2.0",
    "morgan": "^1.10.0",
    "nyc": "^17.1.0",
    "ovsx": "^0.10.1",
    "prettier": "^3.4.2",
    "react": "^19.0.0",
    "rimraf": "^6.0.1",
    "selenium-webdriver": "^4.27.0",
    "shiki": "^1.26.2",
    "sinon": "^19.0.2",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.19.1",
    "vscode-extension-tester": "^8.10.0",
    "warnings-to-errors-webpack-plugin": "^2.3.0",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1",
    "winston": "^3.17.0",
    "yargs": "^17.7.2",
    "yarn-audit-fix": "^10.1.1"
  },
  "displayName": "Ansible",
  "engineStrict": true,
  "engines": {
    "//": "node version affects only development, it does not affect VS Code runtime",
    "node": ">=20.0",
    "npm": "\n\nERROR: Please use yarn instead of npm for this repository.!!!\n\n",
    "vscode": "^1.85.0",
    "yarn": ">=4.5.1"
  },
  "extensionDependencies": [
    "ms-python.python",
    "redhat.vscode-yaml"
  ],
  "icon": "images/logo.png",
  "keywords": [
    "ansible",
    "yaml",
    "autocompletion",
    "validation"
  ],
  "license": "MIT",
  "main": "./out/client/src/extension.js",
  "name": "ansible",
  "publisher": "redhat",
  "qna": false,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ansible/vscode-ansible.git"
  },
  "scripts": {
    "compile": "tsc -b && tsc -p ./packages/ansible-language-server/tsconfig.json --outDir ./out/server --sourceMap",
    "package": "./tools/helper --package",
    "preinstall": "",
    "pretest": "yarn run compile",
    "unit-tests": "sh -c \"nyc mocha --recursive test/units/lightspeed ${MOCHA_OPTS:-}\"",
    "test-ui": "yarn run test-ui-current && yarn run test-ui-oldest",
    "test-ui-current": "./tools/test-launcher.sh",
    "test-ui-oldest": "CODE_VERSION='min' ./tools/test-launcher.sh",
    "coverage-ui-current": "COVERAGE=1 ./tools/test-launcher.sh",
    "coverage-ui-oldest": "COVERAGE=1 CODE_VERSION='min' ./tools/test-launcher.sh",
    "vscode-prepublish": "yarn run webpack",
    "watch": "tsc -b -w",
    "watch-server": "tsc -p ../ansible-language-server --outDir out/server -w",
    "webpack": "yarn run clean && yarn run compile && webpack --mode production --config ./webpack.config.ts",
    "webpack-dev": "yarn run clean && yarn test-compile && webpack --mode development --config ./webpack.config.ts",
    "webpack:watch": "webpack --mode development --config ./webpack.config.ts --watch",
    "clean": "rimraf out/client out/server out/tsconfig.tsbuildinfo out/syntaxHighlighter coverage .nyc_output",
    "test-compile": "yarn run clean && yarn run compile && tsc -p ./ --sourceMap",
    "test-e2e": "yarn run test-compile && MOCK_LIGHTSPEED_API=1 TEST_TYPE=e2e ./tools/test-launcher.sh",
    "coverage-all": "MOCK_LIGHTSPEED_API=1 TEST_TYPE=e2e COVERAGE=1 ./tools/test-launcher.sh",
    "als-compile": "yarn workspace @ansible/ansible-language-server compile"
  },
  "version": "0.0.0",
  "packageManager": "yarn@4.5.1",
  "vsce": {
    "dependencies": false,
    "yarn": false
  },
  "workspaces": [
    "packages/*"
  ],
  "segmentWriteKey": "zJzQozAVCyM6DTyxk3TjqTX1yd05G4Ow",
  "segmentWriteKeyDebug": "yTJGCq9IUg6o1FdfZJp0PPlNrHRHOOAm"
}
