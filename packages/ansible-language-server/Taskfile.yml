---
# see https://taskfile.dev/#/
version: "3"
env: &env
  # basically the same thing from .env file:
  # Avoid undesired extra hints from docker when pulling images
  DOCKER_CLI_HINTS: "false"
vars:
  EE_VERSION:
    sh: ./tools/get-image-version
  VIRTUAL_ENV:
    sh: echo "${HOME}/.local/share/virtualenvs/vsa"
tasks:
  default:
    dir: "{{ .TASKFILE_DIR }}"
    desc: Run most commands
    env:
      VERSION:
        sh: node -p "require('./package.json').version"
    cmds:
      - task: package
      - task: test
      - echo Done ansible-language-server {{.VERSION}}!
  build:
    dir: "{{ .TASKFILE_DIR }}"
    desc: Build the project
    cmds:
      - task -d ../.. install
      - npm exec -- yarn run compile
    sources:
      - package-lock.json
      - package.json
      - src/**/*.*
      - test/**/*.*
      - tsconfig.json
      - webpack.config.js
  .test:
    # Keep the desc empty to hide entry when listing
    # desc: Run all tests
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - task: build
      - bash -c ". {{.VIRTUAL_ENV}}/bin/activate && command -v ansible-lint && npm run test"
    interactive: true
  test:
    desc: Run all tests using node (same version as vscode), will skip @ee tests if both SKIP_PODMAN=1 and SKIP_DOCKER=1.
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - task: .test
  test-node-lts:
    dir: "{{ .TASKFILE_DIR }}"
    desc: Run all tests using node-lts (future)
    cmds:
      - task -d ../.. install
      - task: .test
      # restore implicit node version
      - defer: git checkout HEAD .tool-versions
      - defer: git clean -dxf
  test-with-ee:
    dir: "{{ .TASKFILE_DIR }}"
    desc: Run only ee tests
    cmds:
      - task: build
      - >
        . {{.VIRTUAL_ENV}}/bin/activate &&
        bash -c 'npm run test-with-ee'
    interactive: true
  test-without-ee:
    desc: Run only non-ee tests
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - task: build
      - bash -c '. {{.VIRTUAL_ENV}}/bin/activate && npm run test-without-ee'
    interactive: true
  package:
    desc: Package extension
    dir: "{{ .TASKFILE_DIR }}"
    sources:
      - ../../docs/als/changelog.md
      - README.md
      - package*.json
      - out/**/*.*
    generates:
      - "*.tgz"
    cmds:
      - task: build
      - rm -f {{ .TASKFILE_DIR }}/*.tgz
      - npm exec -- yarn pack --out '{{ .TASKFILE_DIR }}/%s-%v.tgz'
    silent: false
  release:
    desc: Create a new release (used by CI)
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - ./tools/release.sh
    interactive: true
